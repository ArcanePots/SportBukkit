--- a/net/minecraft/server/EntityHorseAbstract.java
+++ b/net/minecraft/server/EntityHorseAbstract.java
@@ -6,9 +6,50 @@
 import java.util.List;
 import java.util.UUID;
 import javax.annotation.Nullable;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason; // CraftBukkit
+
+// SportBukkit start
+import com.google.common.collect.Range;
+import org.bukkit.craftbukkit.protocol.MetadataKey;
+// SportBukkit end
 
 public abstract class EntityHorseAbstract extends EntityAnimal implements IInventoryListener, IJumpable {
 
+    // SportBukkit start
+    public static final MetadataKey<Byte> META_HORSE_FLAGS = MetadataKey
+        .builder(EntityHorseAbstract.class, DataWatcherRegistry.a)
+        .id(Range.lessThan(201), 12)
+        .id(Range.atLeast(201), 13)
+        .build();
+
+    public static final MetadataKey<Optional<UUID>> META_OWNER = MetadataKey
+        .builder(EntityHorseAbstract.class, DataWatcherRegistry.m)
+        .id(Range.lessThan(201), 15)
+        .id(Range.closedOpen(201, 301), 16)
+        .id(Range.atLeast(315), 14)
+        .build();
+
+    public static final MetadataKey<Integer> META_HORSE_TYPE = MetadataKey
+        .builder(EntityHorseAbstract.class, DataWatcherRegistry.b)
+        .id(Range.lessThan(201), 13)
+        .id(Range.closedOpen(201, 301), 14)
+        .build();
+
+    public static final MetadataKey<Integer> META_HORSE_VARIANT = MetadataKey
+        .builder(EntityHorseAbstract.class, DataWatcherRegistry.b)
+        .id(Range.lessThan(201), 14)
+        .id(Range.closedOpen(201, 301), 15)
+        .id(Range.atLeast(301), EntityHorse.class, 15)
+        .build();
+
+    public static final MetadataKey<Integer> META_ARMOR = MetadataKey
+        .builder(EntityHorseAbstract.class, DataWatcherRegistry.b)
+        .id(Range.lessThan(201), 16)
+        .id(Range.closedOpen(201, 301), 17)
+        .id(Range.atLeast(301), EntityHorse.class, 16)
+        .build();
+    // SportBukkit end
+
     private static final Predicate<Entity> bG = new Predicate() {
         public boolean a(@Nullable Entity entity) {
             return entity instanceof EntityHorseAbstract && ((EntityHorseAbstract) entity).hasReproduced();
@@ -19,8 +60,8 @@
         }
     };
     public static final IAttribute attributeJumpStrength = (new AttributeRanged((IAttribute) null, "horse.jumpStrength", 0.7D, 0.0D, 2.0D)).a("Jump Strength").a(true);
-    private static final DataWatcherObject<Byte> bH = DataWatcher.a(EntityHorseAbstract.class, DataWatcherRegistry.a);
-    private static final DataWatcherObject<Optional<UUID>> bI = DataWatcher.a(EntityHorseAbstract.class, DataWatcherRegistry.m);
+    private static final DataWatcherObject<Byte> bH = META_HORSE_FLAGS; // SportBukkit
+    private static final DataWatcherObject<Optional<UUID>> bI = META_OWNER; // SportBukkit
     private int bJ;
     private int bK;
     private int bL;
@@ -39,6 +80,7 @@
     private float bS;
     protected boolean bE = true;
     protected int bF;
+    public int maxDomestication = 100; // CraftBukkit - store max domestication value
 
     public EntityHorseAbstract(World world) {
         super(world);
@@ -62,6 +104,24 @@
         super.i();
         this.datawatcher.register(EntityHorseAbstract.bH, Byte.valueOf((byte) 0));
         this.datawatcher.register(EntityHorseAbstract.bI, Optional.absent());
+
+        // SportBukkit start
+        final int typeId;
+        if(this instanceof EntityHorseDonkey) {
+            typeId = 1;
+        } else if(this instanceof EntityHorseMule) {
+            typeId = 2;
+        } else if(this instanceof EntityHorseZombie) {
+            typeId = 3;
+        } else if(this instanceof EntityHorseSkeleton) {
+            typeId = 4;
+        } else {
+            typeId = 0;
+        }
+        this.datawatcher.register(META_HORSE_TYPE, typeId);
+        this.datawatcher.register(META_HORSE_VARIANT, 0);
+        this.datawatcher.register(META_ARMOR, 0);
+        // SportBukkit end
     }
 
     protected boolean g(int i) {
@@ -211,10 +271,10 @@
         return 2;
     }
 
-    protected void dx() {
+    public void dx() { // PAIL: protected-> public, rename
         InventoryHorseChest inventoryhorsechest = this.inventoryChest;
 
-        this.inventoryChest = new InventoryHorseChest("HorseChest", this.di());
+        this.inventoryChest = new InventoryHorseChest("HorseChest", this.di(), this); // CraftBukkit
         this.inventoryChest.a(this.getName());
         if (inventoryhorsechest != null) {
             inventoryhorsechest.b(this);
@@ -354,7 +414,7 @@
     }
 
     public int getMaxDomestication() {
-        return 100;
+        return this.maxDomestication; // CraftBukkit - return stored max domestication instead of 100
     }
 
     protected float ci() {
@@ -414,7 +474,7 @@
         }
 
         if (this.getHealth() < this.getMaxHealth() && f > 0.0F) {
-            this.heal(f);
+            this.heal(f, RegainReason.EATING); // CraftBukkit
             flag = true;
         }
 
@@ -465,7 +525,7 @@
     }
 
     public void die(DamageSource damagesource) {
-        super.die(damagesource);
+        // super.die(damagesource); // Moved down
         if (!this.world.isClientSide && this.inventoryChest != null) {
             for (int i = 0; i < this.inventoryChest.getSize(); ++i) {
                 ItemStack itemstack = this.inventoryChest.getItem(i);
@@ -476,6 +536,7 @@
             }
 
         }
+        super.die(damagesource); // CraftBukkit
     }
 
     public void n() {
@@ -486,7 +547,7 @@
         super.n();
         if (!this.world.isClientSide) {
             if (this.random.nextInt(900) == 0 && this.deathTicks == 0) {
-                this.heal(1.0F);
+                this.heal(1.0F, RegainReason.REGEN); // CraftBukkit
             }
 
             if (this.dE()) {
@@ -719,6 +780,7 @@
         if (this.getOwnerUUID() != null) {
             nbttagcompound.setString("OwnerUUID", this.getOwnerUUID().toString());
         }
+        nbttagcompound.setInt("Bukkit.MaxDomestication", this.maxDomestication); // CraftBukkit
 
         if (!this.inventoryChest.getItem(0).isEmpty()) {
             nbttagcompound.set("SaddleItem", this.inventoryChest.getItem(0).save(new NBTTagCompound()));
@@ -745,6 +807,11 @@
         if (!s.isEmpty()) {
             this.setOwnerUUID(UUID.fromString(s));
         }
+        // CraftBukkit start
+        if (nbttagcompound.hasKey("Bukkit.MaxDomestication")) {
+            this.maxDomestication = nbttagcompound.getInt("Bukkit.MaxDomestication");
+        }
+        // CraftBukkit end
 
         AttributeInstance attributeinstance = this.getAttributeMap().a("Speed");
 
@@ -797,6 +864,18 @@
     }
 
     public void b(int i) {
+        // CraftBukkit start
+        float power;
+        if (i >= 90) {
+            power = 1.0F;
+        } else {
+            power = 0.4F + 0.4F * (float) i / 90.0F;
+        }
+        org.bukkit.event.entity.HorseJumpEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callHorseJumpEvent(this, power);
+        if (event.isCancelled()) {
+            return;
+        }
+        // CraftBukkit end
         this.canSlide = true;
         this.dL();
     }
