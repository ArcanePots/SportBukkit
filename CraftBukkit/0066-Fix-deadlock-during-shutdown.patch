From 9c5921d65197881059fa5262d955979b2902a2b7 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Thu, 25 Sep 2014 18:42:47 -0400
Subject: [PATCH] Fix deadlock during shutdown


diff --git a/src/main/java/net/minecraft/server/ServerConnection.java b/src/main/java/net/minecraft/server/ServerConnection.java
index bafb344..8e5eeff 100644
--- a/src/main/java/net/minecraft/server/ServerConnection.java
+++ b/src/main/java/net/minecraft/server/ServerConnection.java
@@ -20,6 +20,7 @@ import io.netty.util.concurrent.Future;
 import io.netty.util.concurrent.GenericFutureListener;
 import java.io.IOException;
 import java.net.InetAddress;
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
@@ -107,16 +108,33 @@ public class ServerConnection {
         this.d = false;
         Iterator iterator = this.g.iterator();
 
+        // CraftBukkit start - handle processQueue while closing channels to prevent deadlock
+        ArrayList<ChannelFuture> futures = new ArrayList<ChannelFuture>();
+
         while (iterator.hasNext()) {
             ChannelFuture channelfuture = (ChannelFuture) iterator.next();
 
+            futures.add(channelfuture.channel().close());
+        }
+
+        for(;;) {
+            for(Iterator<ChannelFuture> iter = futures.iterator(); iter.hasNext();) {
+                if(iter.next().isDone()) iter.remove();
+            }
+
+            while(!f.processQueue.isEmpty()) {
+                f.processQueue.remove().run();
+            }
+
+            if(futures.isEmpty()) break;
+
             try {
-                channelfuture.channel().close().sync();
-            } catch (InterruptedException interruptedexception) {
-                ServerConnection.e.error("Interrupted whilst closing channel");
+                Thread.sleep(50);
+            } catch(InterruptedException e) {
+                e.printStackTrace();
             }
         }
-
+        // CraftBukkit end
     }
 
     public void c() {
-- 
1.9.0

